{"version":3,"sources":["components/UI/Card.js","components/ExpensesFilter/ExpensesFilter.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["Card","props","classes","className","children","ExpensesFilter","value","selected","onChange","event","onYearSelect","target","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseItem","title","amount","ExpensesList","items","length","map","expense","id","ChartBar","barFillHeight","max","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMaximum","ExpensesChart","chartDataPoints","expenses","getMonth","Expenses","useState","expenseYear","setExpenseYear","filteredExpenses","filter","toString","filtered","yearselected","console","log","Expenseform","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","min","step","onClick","onCancelExpense","NewExpense","isEditing","setIsEditing","enteredExpensedata","random","onAddExpense","initialData","App","setExpenses","prevExpenses","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e97b1db0.chunk.js","sourcesContent":["import \"./Card.css\";\n\nconst Card = (props) => {\n  const classes = 'card ' + props.className;\n\n    return <div className={classes}>{props.children}</div>;\n};\n\nexport default Card;\n","import React from 'react';\n\nimport './ExpensesFilter.css';\n\nconst ExpensesFilter = (props) => {\n\n \n  const selectedYearValue = (event) => {\n    props.onYearSelect(event.target.value)\n  }\n\n  \n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={selectedYearValue}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;","import './ExpenseDate.css';\n\nfunction ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-UK\", { month: \"long\" });\n  const day = props.date.toLocaleString(\"en-UK\", { day: \"2-digit\" });\n  const year = props.date.getFullYear();\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\"> {month}</div>\n      <div className=\"expense-date__year\"> {year}</div>\n      <div className=\"expense-date__day\"> {day}</div>\n    </div>\n  );\n}\n\nexport default ExpenseDate;\n","import React from \"react\";\nimport \"./ExpenseItem.css\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport Card from \"./../UI/Card\";\n\nfunction ExpenseItem(props) {\n\n  return (\n    <Card className=\"expense-item\">\n      <ExpenseDate date={props.date} />\n      <div className=\"expense-item__description\">\n        <h2>{props.title}</h2>\n        <div className=\"expense-item__price\">${props.amount}</div>\n      </div>\n    </Card>\n  );\n}\n\nexport default ExpenseItem;\n","import React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\n\nconst ExpensesList = (props) => {\n  if (props.items.length === 0) {\n    return <p className=\"expenses-list__fallback\">No expenses found.</p>;\n  }\n\n  return (\n    <ul className=\"expenses-list\">\n      {props.items.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import \"./ChartBar.css\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.max > 0) {\n    barFillHeight = Math.round((props.value / props.max) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import ChartBar from \"./ChartBar\";\nimport \"./Chart.css\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map(dataPoint => dataPoint.value);\n  const totalMaximum = Math.max(...dataPointValues);\n\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          max={totalMaximum}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from \"../Chart/Chart\";\n\nconst ExpensesChart = (props) => {\n  const chartDataPoints = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses){\n      const expenseMonth = expense.date.getMonth();\n      chartDataPoints[expenseMonth].value += expense.amount;\n\n  }\n\n  return <Chart dataPoints={chartDataPoints}/>;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport Card from \"./../UI/Card\";\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nfunction Expenses(props) {\n  const [expenseYear, setExpenseYear] = useState(\"2021\");\n\n  const setSelectedYear = (yearselected) => {\n    console.log(yearselected);\n    setExpenseYear(yearselected);\n  };\n\n  const filteredExpenses = props.expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === expenseYear;\n  });\n\n  return (\n    <Card className=\"expenses\">\n      <ExpensesFilter\n        filtered={filteredExpenses}\n        selected={expenseYear}\n        onYearSelect={setSelectedYear}\n      />\n      <ExpensesChart expenses={filteredExpenses}/>\n      <ExpensesList items={filteredExpenses}></ExpensesList>\n    </Card>\n  );\n}\n\nexport default Expenses;\n","import React, { useState } from \"react\";\n\nimport \"./ExpenseForm.css\";\n\nconst Expenseform = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n\n  const titleChangeHandler = (event) => {\n    setEnteredTitle(event.target.value);\n  };\n  const amountChangeHandler = (event) => {\n    setEnteredAmount(event.target.value);\n  };\n\n  const dateChangeHandler = (event) => {\n    setEnteredDate(event.target.value);\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    const expenseData = {\n      title: enteredTitle,\n      amount: +enteredAmount,\n      date: new Date(enteredDate),\n    };\n    \n\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n  };\n\n  \n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label> Title </label>\n          <input value={enteredTitle} type=\"text\" onChange={titleChangeHandler} />\n        </div>\n        <div className=\"new-expense__control\">\n          <label> Amount </label>\n          <input\n            onChange={amountChangeHandler}\n            type=\"number\"\n            value={enteredAmount}\n            min=\"0.1\"\n            step=\"0.01\"\n          />\n        </div>\n        <div className=\"new-expense__control\">\n          <label> Date </label>\n          <input\n            onChange={dateChangeHandler}\n            type=\"date\"\n            value={enteredDate}\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n          />\n        </div>\n      </div>\n      <div className=\"new-expense__actions\">\n        <button onClick={props.onCancelExpense} type=\"button\">Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default Expenseform;\n","import React, { useState } from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const saveExpenseDataHandler = (enteredExpensedata) => {\n    const expenseData = {\n      ...enteredExpensedata,\n      id: Math.random().toString(),\n    };\n    props.onAddExpense(expenseData);\n    setIsEditing(false)\n  };\n\n  const [isEditing, setIsEditing] = useState(false);\n\n  const showForm = () => {\n    setIsEditing(true);\n  };\n\nconst hideForm = () => {\n  setIsEditing(false);\n}\n\n  return (\n    <div className=\"new-expense\">\n      <div className=\"new-expense__actions\">\n        {!isEditing && <button onClick={showForm}> Add new expense</button>}\n        {isEditing && <ExpenseForm onCancelExpense={hideForm} onSaveExpenseData={saveExpenseDataHandler} />}\n      </div>\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\nimport ExpensesChart from './components/Expenses/ExpensesChart';\n\nconst initialData = [\n  { id: 1, title: \"new desk\", amount: 300, date: new Date(2021, 5, 12) },\n  { id: 2, title: \"new table\", amount: 500, date: new Date(2021, 6, 12) },\n  { id: 4, title: \"new chair\", amount: 200, date: new Date(2021, 8, 12) },\n];\n\nfunction App() {\n  const [expenses, setExpenses] = useState(initialData);\n\n  const addExpenseHandler = (expense) => {\n    setExpenses(prevExpenses => {\n      return [expense, ...prevExpenses];\n      \n  \n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <NewExpense onAddExpense={addExpenseHandler} />\n      {/* <ExpensesChart expenses={expenses}/> */}\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}